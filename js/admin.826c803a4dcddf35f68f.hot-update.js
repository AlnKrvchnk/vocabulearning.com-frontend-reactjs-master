/*! For license information please see admin.826c803a4dcddf35f68f.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateclient("admin",{"./src/admin/components/lemma/LemmaComponent.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ LemmaComponent)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var _LemmaTableComponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LemmaTableComponent */ "./src/admin/components/lemma/LemmaTableComponent.js");\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.less */ "./src/admin/components/lemma/index.less");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");\n/* harmony import */ var _config_API__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../config/API */ "./src/config/API.js");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../functions */ "./src/functions.js");\n/* harmony import */ var _routes_actions_components_IndexAction_components_CourseGlavs_CourseGlavs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../routes/actions/components/IndexAction/components/CourseGlavs/CourseGlavs */ "./src/admin/routes/actions/components/IndexAction/components/CourseGlavs/CourseGlavs.js");\n/* harmony import */ var _global_components_layout_Loader__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../global-components/layout/Loader */ "./src/global-components/layout/Loader.js");\n/* harmony import */ var _global_components_layout_ToolTip_ToolTip__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../global-components/layout/ToolTip/ToolTip */ "./src/global-components/layout/ToolTip/ToolTip.js");\n/* harmony import */ var _global_components_layout_Modal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../global-components/layout/Modal */ "./src/global-components/layout/Modal.js");\n/* harmony import */ var _LemmaUploadText_LemmaUploadText__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./LemmaUploadText/LemmaUploadText */ "./src/admin/components/lemma/LemmaUploadText/LemmaUploadText.js");\n/* harmony import */ var _LemmaUploadBook_LemmaUploadBook__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./LemmaUploadBook/LemmaUploadBook */ "./src/admin/components/lemma/LemmaUploadBook/LemmaUploadBook.js");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/v1.js");\n/* harmony import */ var _routes_actions_components_IndexAction_components_CourseGlavsChange_CourseGlavsChange__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../routes/actions/components/IndexAction/components/CourseGlavsChange/CourseGlavsChange */ "./src/admin/routes/actions/components/IndexAction/components/CourseGlavsChange/CourseGlavsChange.js");\n/* harmony import */ var _global_components_layout_Inputs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../global-components/layout/Inputs */ "./src/global-components/layout/Inputs.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar LemmaComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(LemmaComponent, _React$Component);\n  var _super = _createSuper(LemmaComponent);\n  function LemmaComponent(props) {\n    var _this;\n    _classCallCheck(this, LemmaComponent);\n    _this = _super.call(this, props);\n    _this.state = {\n      activeLemma: [],\n      // активный текст,\n      course_heads: [],\n      course_id: null,\n      currentGlav: {\n        index: 0,\n        id: 0,\n        course_id: 0\n      },\n      load_value: true,\n      // true = text, false = file,\n\n      // pagination\n      default_slice_value: 10,\n      pagination: {},\n      skip_lemma_text: false,\n      cache_from_slice: 0,\n      cache_to_slice: 1\n    };\n    _this.convertTextToObjects = _this.convertTextToObjects.bind(_assertThisInitialized(_this));\n    _this.setActiveLemma = _this.setActiveLemma.bind(_assertThisInitialized(_this));\n    _this.loadAllWordsTables = _this.loadAllWordsTables.bind(_assertThisInitialized(_this));\n    _this.updateCurrentGlav = _this.updateCurrentGlav.bind(_assertThisInitialized(_this));\n    _this.changeLoadValue = _this.changeLoadValue.bind(_assertThisInitialized(_this));\n    _this.createLemma = _this.createLemma.bind(_assertThisInitialized(_this));\n    _this.getTextFromFile = _this.getTextFromFile.bind(_assertThisInitialized(_this));\n    _this.onDeleteLemma = _this.onDeleteLemma.bind(_assertThisInitialized(_this));\n    _this.txtToJSON = _this.txtToJSON.bind(_assertThisInitialized(_this));\n    _this.onUpdatePhrase = _this.onUpdatePhrase.bind(_assertThisInitialized(_this));\n    _this.onDoPhrase = _this.onDoPhrase.bind(_assertThisInitialized(_this));\n    _this.createWord = _this.createWord.bind(_assertThisInitialized(_this));\n    _this.autoTextConvertLemma = _this.autoTextConvertLemma.bind(_assertThisInitialized(_this));\n    _this.changeLocalSavePage = _this.changeLocalSavePage.bind(_assertThisInitialized(_this));\n\n    // Используем во вкладке "Тексты деления"\n    window.autoTextConvertLemma = _this.autoTextConvertLemma;\n    return _this;\n  }\n  _createClass(LemmaComponent, [{\n    key: "onUpdatePhrase",\n    value: function onUpdatePhrase(lemma_id, indexWord, indexPhrase) {\n      var _this2 = this;\n      var head_id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var new_phrase = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \'\';\n      var new_state_lemma = this.state.activeLemma,\n        current_lemma = new_state_lemma.filter(function (item) {\n          return item.id == lemma_id;\n        })[0],\n        item = current_lemma.data[indexWord].phrases[indexPhrase];\n      current_lemma.data[indexWord].phrases[indexPhrase].phrase = new_phrase;\n      var json_text = JSON.stringify(current_lemma);\n      setTimeout(function () {\n        axios__WEBPACK_IMPORTED_MODULE_3__["default"].put(_config_API__WEBPACK_IMPORTED_MODULE_4__["default"].host + \'/api/lemma-convert/\' + _this2.state.course_id + \'/\' + head_id, {\n          json_text: json_text,\n          lemma_id: lemma_id\n        }, {\n          headers: {\n            \'Authorization\': (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getCurrentUserToken)()\n          }\n        }).then(function (response) {\n          var $data = response.data;\n          if ($data.success) {\n            _this2.setState(function () {\n              return {\n                activeLemma: new_state_lemma\n              };\n            });\n          }\n          (0,_functions__WEBPACK_IMPORTED_MODULE_5__.Toast)($data.error_message);\n        });\n      }, 800);\n    }\n  }, {\n    key: "onDeleteLemma",\n    value: function onDeleteLemma(id, head_id) {\n      var _this3 = this;\n      var yes_delete = confirm(\'Вы действительно хотите удалить таблицу?\');\n      if (yes_delete) {\n        axios__WEBPACK_IMPORTED_MODULE_3__["default"]["delete"]("".concat(_config_API__WEBPACK_IMPORTED_MODULE_4__["default"].host, "/api/lemma-convert/").concat(this.state.course_id, "/").concat(head_id, "/").concat(id), {\n          headers: {\n            \'Authorization\': (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getCurrentUserToken)()\n          }\n        }).then(function (response) {\n          if (response.data) {\n            var data = response.data;\n            if (data.success) {\n              _this3.loadAllWordsTables();\n            }\n            (0,_functions__WEBPACK_IMPORTED_MODULE_5__.Toast)(data.error_message, data.success ? \'green\' : \'red\');\n          }\n        });\n      }\n    }\n  }, {\n    key: "txtToJSON",\n    value: function txtToJSON(text) {\n      var _this4 = this;\n      var book_path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n      var cb = arguments.length > 2 ? arguments[2] : undefined;\n      var words_on_check = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var _defaultText = text;\n      var wordsOnCheck = words_on_check == null ? {} : words_on_check;\n      var finalText = [];\n      var head_id = this.state.currentGlav.id;\n      var course_id = this.state.course_id;\n      var rpOtherSymb = function rpOtherSymb(text) {\n        //text.replace(/[^-A-zА-я]|/gim,\'\') - эта строка обрезает любые символы кроме букв (русс/англ)\n        return text.trim();\n      };\n      text = text.trim().split(\' \');\n      var l_text = text.length;\n      var i = 0;\n      var finalData = function finalData() {\n        var created_lemma_id = (0,uuid__WEBPACK_IMPORTED_MODULE_14__["default"])(),\n          default_object = {\n            success: true,\n            id: created_lemma_id,\n            head_id: _this4.state.currentGlav.id,\n            text: _defaultText,\n            data: finalText,\n            book_path: book_path\n          };\n        if (cb) cb({\n          obj: default_object,\n          json: JSON.stringify(default_object),\n          id: created_lemma_id\n        });\n      };\n      var total_loader = $(\'.total_loader_application .total_loader_application__txt\');\n      var forInterval = setInterval(function () {\n        if (i !== l_text - 1) {\n          total_loader.text((100 / l_text * i).toFixed(2) + \'% загружено\');\n          var item = rpOtherSymb(text[i].toUpperCase());\n          if (wordsOnCheck[item] >= 0) {} else {\n            // Если существует дефолтный объект слов на проверку (из LemmaWordChange.js)\n            if (words_on_check !== null) {\n              // Если слово не шаблонное и значение != -1, переходим на следующую итерацию\n              if (wordsOnCheck[item] != -1) {\n                i++;\n                return;\n              }\n            }\n\n            // Если уже существуют дефолтные СЛОВА для разбиения, то новые не добавляем\n            wordsOnCheck[item] = i;\n\n            // ищем предложения предложениях\n            var current_active_index = 0;\n            var phrases = text.join(\' \').trim().split(/(\\.|\\?|\\!)/).filter(function (word) {\n              // ищем подходящие слова в предложениях\n              /*\r\n              Данный вариант плохо работает, не выводит некоторые фразы. Надо поправить\r\n              let w_i = rpOtherSymb(word.trim().toLowerCase()).split(\' \').indexOf(item.toLowerCase())\r\n                if(w_i > -1) {\r\n                  current_active_index = w_i\r\n              }\r\n                return w_i > -1*/\n\n              var checkWord = word.trim().toLowerCase().split(\' \').filter(function (word_2, k) {\n                if (rpOtherSymb(word_2) == item.toLowerCase()) {\n                  current_active_index = k;\n                }\n                return rpOtherSymb(word_2) == item.toLowerCase();\n              });\n              return checkWord.length;\n            }).slice(0, 11).map(function (phrase, i) {\n              return {\n                phrase: phrase,\n                index: i,\n                selected: false,\n                archived: false\n              };\n            });\n            finalText.push({\n              word: text[i],\n              index: i,\n              head_id: head_id,\n              course_id: course_id,\n              current_active_index: current_active_index,\n              selected: false,\n              repeating: phrases.length,\n              phrases: phrases\n            });\n          }\n          i++;\n        } else {\n          finalData();\n          clearInterval(forInterval);\n          i = 0;\n          return;\n        }\n      });\n    }\n\n    // Данная функция используется во вкладке "Тексты деления"\n  }, {\n    key: "autoTextConvertLemma",\n    value: function autoTextConvertLemma(result_text, words_on_check, DEF_OBJ) {\n      var _this5 = this;\n      (0,_functions__WEBPACK_IMPORTED_MODULE_5__.showLoader)();\n      this.txtToJSON(result_text.trim(), \'\', function (data) {\n        _this5.convertTextToObjects(data.json, \'\', DEF_OBJ, data.id);\n        _this5.loadAllWordsTables();\n        (0,_functions__WEBPACK_IMPORTED_MODULE_5__.hideLoader)();\n      }, words_on_check);\n    }\n  }, {\n    key: "createLemma",\n    value: function createLemma($form) {\n      var _this6 = this;\n      var DEF_OBJ = {\n        course_id: this.state.course_id,\n        head_id: this.state.currentGlav.id,\n        cb: function cb() {\n          _this6.loadAllWordsTables();\n          (0,_functions__WEBPACK_IMPORTED_MODULE_5__.hideLoader)();\n        }\n      };\n      if (DEF_OBJ.head_id <= 0) {\n        (0,_functions__WEBPACK_IMPORTED_MODULE_5__.Toast)(\'Вы не выбрали главу!\', \'red\');\n        return;\n      }\n      if ($form.book_text.value !== "") {\n        var book_text_val = $form.book_text.value;\n        this.props.onShowModalChange(book_text_val, function (result_text, words_on_check) {\n          _this6.autoTextConvertLemma(result_text, words_on_check, DEF_OBJ);\n        }, this.state.skip_lemma_text);\n      } else if ($form.book) {\n        var FD = new FormData($form);\n        (0,_functions__WEBPACK_IMPORTED_MODULE_5__.showLoader)();\n        this.getTextFromFile(FD, function (response) {\n          if (response.success) {\n            var response_text = response.data.text;\n            (0,_functions__WEBPACK_IMPORTED_MODULE_5__.hideLoader)();\n            // Выбираем слова в попапе\n            _this6.props.onShowModalChange(response_text, function (result_text, words_on_check) {\n              // формируем JSON объект\n              (0,_functions__WEBPACK_IMPORTED_MODULE_5__.showLoader)();\n              _this6.txtToJSON(result_text, response.file_path, function (data) {\n                // Отправляем на лематизацию (разбиение)\n                _this6.convertTextToObjects(data.json, response.file_path, DEF_OBJ, data.id);\n                (0,_functions__WEBPACK_IMPORTED_MODULE_5__.hideLoader)();\n              }, words_on_check);\n            }, _this6.state.skip_lemma_text);\n          } else {\n            (0,_functions__WEBPACK_IMPORTED_MODULE_5__.Toast)(response.error_message, \'red\');\n            (0,_functions__WEBPACK_IMPORTED_MODULE_5__.hideLoader)();\n          }\n        });\n      }\n      $form.reset();\n    }\n  }, {\n    key: "getTextFromFile",\n    value: function getTextFromFile(data, cb) {\n      axios__WEBPACK_IMPORTED_MODULE_3__["default"].post(_config_API__WEBPACK_IMPORTED_MODULE_4__["default"].host + \'/api/lemma\', data, {\n        headers: {\n          \'Authorization\': (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getCurrentUserToken)()\n        }\n      }).then(function (response) {\n        return cb(response.data);\n      });\n    }\n  }, {\n    key: "loadAllWordsTables",\n    value: function loadAllWordsTables() {\n      var _this7 = this;\n      var id = this.state.course_id;\n      if (id == null) return;\n      axios__WEBPACK_IMPORTED_MODULE_3__["default"].get(_config_API__WEBPACK_IMPORTED_MODULE_4__["default"].host + \'/api/lemma-convert/\' + id + \'/\', {\n        headers: {\n          \'Authorization\': (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getCurrentUserToken)()\n        }\n      }).then(function (lemmaResponse) {\n        var data = lemmaResponse.data;\n        var success = data.success;\n        if (success) {\n          data = data.data;\n        } else {\n          data = [];\n        }\n\n        /*data = (data.length) ? data : []\r\n          if(typeof data == "object" && data.length == undefined) data = [data]*/\n\n        _this7.setState(function () {\n          return {\n            activeLemma: data\n          };\n        });\n      });\n    }\n  }, {\n    key: "loadCurrentLemma",\n    value: function loadCurrentLemma(_ref) {\n      var _this8 = this;\n      var id = _ref.id;\n      axios__WEBPACK_IMPORTED_MODULE_3__["default"].get(_config_API__WEBPACK_IMPORTED_MODULE_4__["default"].host + \'/api/courses-heads/\' + id).then(function (headResponse) {\n        _this8.setState(function () {\n          return {\n            course_heads: headResponse.data.data,\n            course_id: id\n          };\n        });\n        _this8.loadAllWordsTables();\n      });\n    }\n  }, {\n    key: "convertTextToObjects",\n    value: function convertTextToObjects(default_object) {\n      var _this9 = this;\n      var book_path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n      var _ref2 = arguments.length > 2 ? arguments[2] : undefined,\n        _ref2$course_id = _ref2.course_id,\n        course_id = _ref2$course_id === void 0 ? 0 : _ref2$course_id,\n        _ref2$head_id = _ref2.head_id,\n        head_id = _ref2$head_id === void 0 ? 0 : _ref2$head_id,\n        cb = _ref2.cb;\n      var id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "".concat(Math.random());\n      var index_lemma_active = 0;\n      // Проверяем наличие леммы в активных таблицах по ID главы\n      var head_id_isset = this.state.activeLemma.length ? this.state.activeLemma.filter(function (item, i) {\n        if (item.head_id == head_id) {\n          index_lemma_active = i;\n          return item.head_id == head_id;\n        }\n      }) : [];\n      if (this.state.activeLemma.length && head_id_isset.length) {\n        var new_state_lemma = this.state.activeLemma;\n        default_object = JSON.parse(default_object);\n        new_state_lemma[index_lemma_active].data = [].concat(_toConsumableArray(default_object.data), _toConsumableArray(new_state_lemma[index_lemma_active].data));\n        var active_lemma_created_id = new_state_lemma[index_lemma_active].id;\n        if (new_state_lemma.length) new_state_lemma = new_state_lemma[index_lemma_active];\n        var json_text = JSON.stringify(new_state_lemma);\n        axios__WEBPACK_IMPORTED_MODULE_3__["default"].put(_config_API__WEBPACK_IMPORTED_MODULE_4__["default"].host + \'/api/lemma-convert/\' + course_id + \'/\' + head_id, {\n          json_text: json_text,\n          lemma_id: active_lemma_created_id\n        }, {\n          headers: {\n            \'Authorization\': (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getCurrentUserToken)()\n          }\n        }).then(function (response) {\n          var $data = response.data;\n          if ($data.success) {\n            _this9.loadAllWordsTables();\n          }\n          (0,_functions__WEBPACK_IMPORTED_MODULE_5__.Toast)($data.error_message);\n        });\n      } else {\n        axios__WEBPACK_IMPORTED_MODULE_3__["default"].post(_config_API__WEBPACK_IMPORTED_MODULE_4__["default"].host + \'/api/lemma-convert/\' + course_id + \'/\' + head_id, {\n          default_object: default_object,\n          book_path: book_path,\n          created_lemma_id: id\n        }, {\n          headers: {\n            \'Authorization\': (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getCurrentUserToken)()\n          }\n        }).then(function (response) {\n          if (response.data) {\n            if (cb) cb();\n            (0,_functions__WEBPACK_IMPORTED_MODULE_5__.Toast)(\'Вы успешно сделали лемматизацию!\', \'green\');\n          }\n        });\n      }\n    }\n  }, {\n    key: "triggerSorting",\n    value: function triggerSorting(data) {\n      var new_value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.setState(function (prevState) {\n        return {\n          searching: _objectSpread(_objectSpread({}, prevState.searching), {}, {\n            sorting_element: data,\n            sorting_element_value: new_value ? new_value : !prevState.searching.sorting_element_value\n          })\n        };\n      });\n    }\n  }, {\n    key: "onDoPhrase",\n    value: function onDoPhrase(lemma_id, indexWord, indexPhrase) {\n      var _this10 = this;\n      var head_id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var action = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \'DELETE\';\n      var elem = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \'PHRASE\';\n      var item = arguments.length > 6 ? arguments[6] : undefined;\n      var last_item = arguments.length > 7 ? arguments[7] : undefined;\n      var TOGGLE_DISABLED_ITEMS = function TOGGLE_DISABLED_ITEMS() {\n        var is_disabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        if (is_disabled) {\n          $(\'.lemma-item\').toggleClass(\'disabled\');\n        } else {\n          $(\'.lemma-item\').removeClass(\'disabled\');\n        }\n      };\n      var ELEM_TYPE = \'Элемент "Фраза"\';\n      if (elem == \'WORD\') ELEM_TYPE = \'Элемент "Слово"\';\n      if (!head_id || head_id == 0) return (0,_functions__WEBPACK_IMPORTED_MODULE_5__.Toast)(\'Выберите главу\', \'red\');\n      var new_state_lemma = this.state.activeLemma,\n        current_lemma = new_state_lemma.filter(function (item) {\n          return item.id == lemma_id;\n        })[0],\n        msg = "".concat(ELEM_TYPE, " \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D");\n      action = action.toUpperCase();\n      TOGGLE_DISABLED_ITEMS();\n\n      // Действия (actions)\n      switch (action) {\n        case \'ADD_TO_COURSE\':\n          var curr_word = current_lemma.data[indexWord],\n            curr_phrase = curr_word.phrases[indexPhrase];\n          if (curr_phrase.word_id) {\n            (0,_functions__WEBPACK_IMPORTED_MODULE_5__.Toast)(\'Фраза уже есть в курсе\', \'red\');\n            TOGGLE_DISABLED_ITEMS(false);\n            return;\n          }\n          msg = "".concat(ELEM_TYPE, " \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D \\u0432 \\u043A\\u0443\\u0440\\u0441!");\n          this.createWord(curr_word.word, curr_phrase.phrase, head_id, function (data) {\n            if (data.insertId) {\n              current_lemma.data[indexWord].phrases[indexPhrase].word_id = data.insertId;\n              _this10.setState(function () {\n                return {\n                  activeLemma: new_state_lemma\n                };\n              }, function () {\n                _this10.setActiveLemma(current_lemma.id, indexWord, 0, head_id);\n              });\n            }\n          });\n          break;\n        case \'DELETE\':\n          current_lemma.data[indexWord].phrases.splice(indexPhrase, 1);\n          break;\n        case \'ARCHIVE\':\n          msg = "".concat(ELEM_TYPE, " \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0430\\u0440\\u0445\\u0438\\u0432\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D");\n          if (elem == \'WORD\') {\n            current_lemma.data[indexWord].archived = !current_lemma.data[indexWord].archived;\n          } else {\n            current_lemma.data[indexWord].phrases[indexPhrase].archived = !current_lemma.data[indexWord].phrases[indexPhrase].archived;\n          }\n          break;\n        case \'DELETE_WORD\':\n          msg = "".concat(ELEM_TYPE, " \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D");\n          current_lemma.data.splice(indexWord, 1);\n          break;\n      }\n      var json_text = JSON.stringify(current_lemma);\n      axios__WEBPACK_IMPORTED_MODULE_3__["default"].put(_config_API__WEBPACK_IMPORTED_MODULE_4__["default"].host + \'/api/lemma-convert/\' + this.state.course_id + \'/\' + head_id, {\n        json_text: json_text,\n        lemma_id: lemma_id\n      }, {\n        headers: {\n          \'Authorization\': (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getCurrentUserToken)()\n        }\n      }).then(function (response) {\n        var $data = response.data;\n        TOGGLE_DISABLED_ITEMS(false);\n        if ($data.success) {\n          _this10.setState(function () {\n            return {\n              activeLemma: new_state_lemma\n            };\n          });\n          (0,_functions__WEBPACK_IMPORTED_MODULE_5__.Toast)(msg, \'green\');\n          return;\n        }\n        (0,_functions__WEBPACK_IMPORTED_MODULE_5__.Toast)(\'Ошибка!\', \'red\');\n      });\n    }\n  }, {\n    key: "createWord",\n    value: function createWord() {\n      var word = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'\';\n      var inputVal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n      var head_id = arguments.length > 2 ? arguments[2] : undefined;\n      var cb = arguments.length > 3 ? arguments[3] : undefined;\n      var findIndex = inputVal.split(\' \').indexOf(word);\n      var course_id = this.state.course_id;\n      (0,_functions__WEBPACK_IMPORTED_MODULE_5__.parseSelectingFunc)({\n        word: word,\n        index: findIndex,\n        inputVal: inputVal\n      }, function (data) {\n        _functions__WEBPACK_IMPORTED_MODULE_5__.$API.createWordInCourse((0,_functions__WEBPACK_IMPORTED_MODULE_5__.createFormHTML)({\n          phrase_top: inputVal,\n          phrase: data.inputVal,\n          explanation: \'-\',\n          word: word,\n          explanation_word: \'-\',\n          explanation_second: \'-\',\n          morph_priz: \'-\',\n          etymology: \'-\'\n        }), {\n          course_head_id: head_id,\n          currentEditModule: course_id,\n          id: course_id,\n          currentGlav: {\n            id: head_id,\n            index: 0,\n            course_id: course_id\n          },\n          callback: function callback(data) {\n            if (cb) cb(data.data);\n          }\n        });\n      });\n    }\n  }, {\n    key: "setActiveLemma",\n    value: function setActiveLemma(lemma_id, indexWord, indexPhrase) {\n      var _this11 = this;\n      var head_id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var new_state_lemma = this.state.activeLemma,\n        current_lemma = new_state_lemma.filter(function (item) {\n          return item.id == lemma_id;\n        })[0],\n        item = current_lemma.data[indexWord].phrases[indexPhrase];\n      current_lemma.data[indexWord].phrases[indexPhrase].selected = !item.selected;\n      var json_text = JSON.stringify(current_lemma);\n      axios__WEBPACK_IMPORTED_MODULE_3__["default"].put(_config_API__WEBPACK_IMPORTED_MODULE_4__["default"].host + \'/api/lemma-convert/\' + this.state.course_id + \'/\' + head_id, {\n        json_text: json_text,\n        lemma_id: lemma_id\n      }, {\n        headers: {\n          \'Authorization\': (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getCurrentUserToken)()\n        }\n      }).then(function (response) {\n        var $data = response.data;\n        if ($data.success) {\n          var dt_createm = {\n            phrase: item.phrase.trim(),\n            word: current_lemma.data[indexWord].word.trim(),\n            indexWord: current_lemma.data[indexWord].current_active_index,\n            currentGlav: _objectSpread(_objectSpread({}, _this11.state.currentGlav), {}, {\n              course_id: _this11.state.course_id\n            })\n          };\n          window.currentGlav = dt_createm.currentGlav;\n          window.currentEditModule = _this11.state.course_id;\n          _this11.setState(function () {\n            return {\n              activeLemma: new_state_lemma\n            };\n          }, function () {\n            _this11.props.activeLemmaModule.updateModalData(_this11.props.activeLemmaModule, null, function () {\n              if (item.selected) {\n                // Парсим слово\n                _this11.createWord(dt_createm.word, dt_createm.phrase, head_id);\n              }\n            });\n          });\n        }\n        (0,_functions__WEBPACK_IMPORTED_MODULE_5__.Toast)($data.error_message);\n      });\n    }\n  }, {\n    key: "componentWillReceiveProps",\n    value: function componentWillReceiveProps(props) {\n      if (props.activeLemmaModule !== null) {\n        this.loadCurrentLemma(props.activeLemmaModule);\n      }\n    }\n  }, {\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      // Проверяем хранилище\n      this.changeLocalSavePage();\n      this.props.onUpdateLemma({\n        id: this.props.course_id\n      });\n    }\n  }, {\n    key: "updateCurrentGlav",\n    value: function updateCurrentGlav(_ref3) {\n      var index = _ref3.index,\n        id = _ref3.id;\n      var cd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      cd = cd !== null ? cd : parseInt(this.props.id);\n      var data_to_save = {\n        index: index,\n        id: id,\n        course_id: cd\n      };\n      self.currentGlavLemma = data_to_save;\n      this.setState(function () {\n        return {\n          currentGlav: data_to_save,\n          cache_from_slice: 0,\n          cache_to_slice: 1\n        };\n      });\n    }\n  }, {\n    key: "changeLoadValue",\n    value: function changeLoadValue() {\n      this.setState(function (prevState) {\n        return {\n          load_value: !prevState.load_value\n        };\n      });\n    }\n  }, {\n    key: "changeLocalSavePage",\n    value: function changeLocalSavePage() {\n      // Локальное хранилище\n      var local_save_page_id = \'lemma_page\' + this.props.course_id || 0,\n        local_save_page = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getLocal)(local_save_page_id);\n      if (local_save_page) {\n        var last_page_end = JSON.parse(local_save_page);\n        if (last_page_end.from_slice && last_page_end.currentGlav && last_page_end.currentPage == location.hash) {\n          var cid = Number(last_page_end.course_id);\n          // Удаляем сохраненные данные\n          (0,_functions__WEBPACK_IMPORTED_MODULE_5__.localDelete)(local_save_page_id);\n          // Восстанавливаем страницу\n          this.updateCurrentGlav({\n            index: last_page_end.currentGlav.index,\n            id: last_page_end.currentGlav.id,\n            course_id: cid\n          }, cid);\n          this.setState(function () {\n            return {\n              cache_from_slice: last_page_end.from_slice,\n              cache_to_slice: last_page_end.from_slice + 1\n            };\n          });\n\n          // Переключаемся между слайдами\n          document.getElementById(\'lemma-tab\').click();\n        }\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this12 = this;\n      var activeLemma = this.state.activeLemma;\n      // проверка на наличие главы\n      var glavs_isset = this.state.course_heads.length && this.props.activeLemmaModule;\n\n      // Если есть сохраненные данные\n      var _this$state = this.state,\n        cache_from_slice = _this$state.cache_from_slice,\n        cache_to_slice = _this$state.cache_to_slice;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n        className: "lemma"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("form", {\n        id: "lemma-form",\n        className: "row"\n      }, glavs_isset && this.props.course_id ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n        className: "lemma__top"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("a", {\n        id: "top"\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n        className: "fingman_panel_wrapper course-glavs__button"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_routes_actions_components_IndexAction_components_CourseGlavs_CourseGlavs__WEBPACK_IMPORTED_MODULE_6__["default"], {\n        onSetGlav: this.updateCurrentGlav,\n        activeGlav: this.state.currentGlav,\n        triggerSorting: this.triggerSorting,\n        onSetNameGlav: this.props.onChangeCurrentGlav,\n        courseId: this.state.course_id,\n        data: this.state.course_heads,\n        onUpdate: this.props.onUpdate,\n        notWidgets: false,\n        modalId: \'modal-changeGlavs\'\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_global_components_layout_Inputs__WEBPACK_IMPORTED_MODULE_13__.Checkbox, {\n        title: \'Пропустить этап выделения слов\',\n        checked: this.state.skip_lemma_text,\n        onChange: function onChange(is_checked) {\n          return _this12.setState(function () {\n            return {\n              skip_lemma_text: is_checked\n            };\n          });\n        }\n      })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n        className: "fingman_panel_wrapper"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n        className: "course-glavs__top"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n        className: "course-glavs__top__item"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n        className: "course-glavs__addPhrase"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("a", {\n        href: "#modal-lemma-uploadText",\n        className: "btn-new btn-new--green modal-trigger",\n        onClick: function onClick(e) {\n          e.preventDefault();\n          (0,_functions__WEBPACK_IMPORTED_MODULE_5__.closeSidebar)();\n        }\n      }, "\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0442\\u0435\\u043A\\u0441\\u0442")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_global_components_layout_ToolTip_ToolTip__WEBPACK_IMPORTED_MODULE_8__["default"], {\n        info: \'Нажмите на кнопку, чтобы загрузить текст\',\n        icon: \'help\'\n      })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n        className: "course-glavs__top__item"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n        className: "course-glavs__addPhrase"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("a", {\n        href: "#modal-lemma-uploadBook",\n        className: "btn-new btn-new--grey modal-trigger",\n        onClick: function onClick(e) {\n          e.preventDefault();\n          (0,_functions__WEBPACK_IMPORTED_MODULE_5__.closeSidebar)();\n        }\n      }, "\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u043A\\u043D\\u0438\\u0433\\u0443")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_global_components_layout_ToolTip_ToolTip__WEBPACK_IMPORTED_MODULE_8__["default"], {\n        info: \'Нажмите на кнопку, чтобы загрузить книгу\',\n        icon: \'help\'\n      })))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("hr", {\n        className: \'fingman__divider\'\n      }))) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3", null, "\\u0412 \\u0434\\u0430\\u043D\\u043D\\u043E\\u043C \\u043A\\u0443\\u0440\\u0441\\u0435 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B \\u0433\\u043B\\u0430\\u0432\\u044B!"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_global_components_layout_Modal__WEBPACK_IMPORTED_MODULE_9__["default"], {\n        modalClass: \'lemma-uploadText\',\n        content: _LemmaUploadText_LemmaUploadText__WEBPACK_IMPORTED_MODULE_10__["default"],\n        data: {\n          createLemma: this.createLemma\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_global_components_layout_Modal__WEBPACK_IMPORTED_MODULE_9__["default"], {\n        modalClass: \'lemma-uploadBook\',\n        content: _LemmaUploadBook_LemmaUploadBook__WEBPACK_IMPORTED_MODULE_11__["default"],\n        data: {\n          createLemma: this.createLemma\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_global_components_layout_Modal__WEBPACK_IMPORTED_MODULE_9__["default"], {\n        modalClass: \'changeGlavs\',\n        content: _routes_actions_components_IndexAction_components_CourseGlavsChange_CourseGlavsChange__WEBPACK_IMPORTED_MODULE_12__["default"],\n        data: _objectSpread({\n          data: this.state.course_heads,\n          onSetGlav: this.updateCurrentGlav,\n          activeGlav: this.state.currentGlav\n        }, this.props)\n      })), activeLemma.length ? activeLemma.map(function (item, i) {\n        if (_this12.state.currentGlav.id == item.head_id) {\n          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_LemmaTableComponent__WEBPACK_IMPORTED_MODULE_1__["default"], {\n            onDoPhrase: _this12.onDoPhrase,\n            onUpdatePhrase: _this12.onUpdatePhrase,\n            book_path: item.book_path,\n            default_slice_value: _this12.state.default_slice_value,\n            onDeleteLemma: _this12.onDeleteLemma,\n            id: item.id,\n            indexLemma: i,\n            key: i,\n            course_id: _this12.state.course_id,\n            currentGlav: _this12.state.currentGlav,\n            updateCurrentGlav: _this12.updateCurrentGlav,\n            phrase: item.text,\n            onSetActive: _this12.setActiveLemma,\n            data: item.data,\n            from_slice: cache_from_slice,\n            to_slice: cache_to_slice\n          });\n        }\n      }) : glavs_isset ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_global_components_layout_Loader__WEBPACK_IMPORTED_MODULE_7__["default"], null) : \'\');\n    }\n  }]);\n  return LemmaComponent;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\n\n//# sourceURL=webpack://client/./src/admin/components/lemma/LemmaComponent.js?')}},(function(e){e.h=()=>"9f746575075f6f186d3f"}));